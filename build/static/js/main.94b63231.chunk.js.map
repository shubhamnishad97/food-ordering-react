{"version":3,"sources":["components/Header.js","helpers.js","components/Order.js","components/AddFishForm.js","components/EditFishForm.js","components/Inventory.js","sample-fishes.js","components/Fish.js","base.js","env.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["Header","props","className","tagline","formatPrice","cents","toLocaleString","style","currency","Order","renderOrder","key","fish","fishes","count","order","isAvailable","status","transitionOptions","classNames","timeout","enter","exit","name","price","onClick","removeFromOrder","orderIds","Object","keys","this","total","reduce","prevTotal","component","map","React","Component","AddFishForm","nameRef","createRef","priceRef","statusRef","descRef","imageRef","createFish","event","preventDefault","current","value","parseFloat","desc","image","addFish","currentTarget","reset","onSubmit","ref","type","placeholder","required","EditFishForm","handleChange","console","log","updatedFish","updateFish","index","onChange","deleteFish","Inventory","loadSampleFishes","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","details","src","alt","disabled","addToOrder","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","App","state","Date","now","setState","sampleFishes","localStorageRef","localStorage","getItem","JSON","parse","syncState","context","setItem","stringify","removeBinding","NotFound","Router","BrowserRouter","Switch","Route","path","render","document","querySelector"],"mappings":"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","file":"static/js/main.94b63231.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = (props) => (\n    <header className=\"top\">\n        <h1>\n            Catch\n            <span className=\"ofThe\">\n                <span className=\"of\">Of</span>\n                <span className=\"the\">The</span>\n            </span>\n            Day\n        </h1>\n        <h3 className=\"tagline\">\n            <span>{props.tagline}</span>\n        </h3>\n    </header>\n);\n\nexport default Header;\n","export function formatPrice(cents) {\n    return (cents / 100).toLocaleString('en-US', {\n        style: 'currency',\n        currency: 'USD'\n    });\n}\n\nexport function rando(arr) {\n    return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n    return text\n        .toString()\n        .toLowerCase()\n        .replace(/\\s+/g, '-')\n        .replace(/[^\\w-]+/g, '')\n        .replace(/--+/g, '-')\n        .replace(/^-+/, '')\n        .replace(/-+$/, '');\n}\n","import React from 'react';\nimport { formatPrice } from '../helpers';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\n\nclass Order extends React.Component {\n    renderOrder = (key) => {\n        const fish = this.props.fishes[key];\n        const count = this.props.order[key];\n        const isAvailable = fish && fish.status === 'available';\n        const transitionOptions = {\n            classNames: 'order',\n            key,\n            timeout: { enter: 250, exit: 250 }\n        };\n        // Make sure the fish is loaded before we continue!\n        if (!fish) return null;\n\n        if (!isAvailable) {\n            return (\n                <CSSTransition {...transitionOptions}>\n                    <li key={key}>\n                        Sorry {fish ? fish.name : 'fish'} is no longer available\n                    </li>\n                </CSSTransition>\n            );\n        }\n        return (\n            <CSSTransition {...transitionOptions}>\n                <li key={key}>\n                    <span>\n                        <span>{count}</span>\n                        lbs {fish.name}\n                        {formatPrice(count * fish.price)}\n                        <span> </span>\n                        <button onClick={() => this.props.removeFromOrder(key)}>\n                            &times;\n                        </button>\n                    </span>\n                </li>\n            </CSSTransition>\n        );\n    };\n    render() {\n        const orderIds = Object.keys(this.props.order);\n        const total = orderIds.reduce((prevTotal, key) => {\n            const fish = this.props.fishes[key];\n            const count = this.props.order[key];\n            const isAvailable = fish && fish.status === 'available';\n            if (isAvailable) {\n                return prevTotal + count * fish.price;\n            }\n            return prevTotal;\n        }, 0);\n        return (\n            <div className=\"order-wrap\">\n                <h2>Order</h2>\n                <TransitionGroup component=\"ul\" className=\"order\">\n                    {orderIds.map(this.renderOrder)}\n                </TransitionGroup>\n                <div className=\"total\">\n                    Total:\n                    <strong>{formatPrice(total)}</strong>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Order;\n","import React from 'react';\n\nclass AddFishForm extends React.Component {\n    nameRef = React.createRef();\n    priceRef = React.createRef();\n    statusRef = React.createRef();\n    descRef = React.createRef();\n    imageRef = React.createRef();\n\n    createFish = (event) => {\n        // 1.  stop the form from submitting\n        event.preventDefault();\n        const fish = {\n            name: this.nameRef.current.value,\n            price: parseFloat(this.priceRef.current.value),\n            status: this.statusRef.current.value,\n            desc: this.descRef.current.value,\n            image: this.imageRef.current.value\n        };\n        this.props.addFish(fish);\n        // refresh the form\n        event.currentTarget.reset();\n    };\n    render() {\n        return (\n            <form className=\"fish-edit\" onSubmit={this.createFish}>\n                <input\n                    name=\"name\"\n                    ref={this.nameRef}\n                    type=\"text\"\n                    placeholder=\"Name\"\n                    required\n                />\n                <input\n                    name=\"price\"\n                    ref={this.priceRef}\n                    type=\"text\"\n                    placeholder=\"Price\"\n                    required\n                />\n                <select name=\"status\" ref={this.statusRef} required>\n                    <option value=\"available\">Fresh!</option>\n                    <option value=\"unavailable\">Sold Out!</option>\n                </select>\n\n                <textarea\n                    name=\"desc\"\n                    ref={this.descRef}\n                    placeholder=\"Desc\"\n                    required\n                />\n                <input\n                    name=\"image\"\n                    ref={this.imageRef}\n                    type=\"text\"\n                    placeholder=\"Image\"\n                    required\n                />\n                <button type=\"submit\">+ Add Fish</button>\n            </form>\n        );\n    }\n}\n\nexport default AddFishForm;\n","import React from 'react';\n\nclass EditFishForm extends React.Component {\n    handleChange = (event) => {\n        console.log(event.currentTarget.value);\n        // update that fish\n        // 1. Take a copy of the curernt fish\n        const updatedFish = {\n            ...this.props.fish,\n            [event.currentTarget.name]: event.currentTarget.value\n        };\n        this.props.updateFish(this.props.index, updatedFish);\n    };\n    render() {\n        return (\n            <div className=\"fish-edit\">\n                <input\n                    type=\"text\"\n                    name=\"name\"\n                    onChange={this.handleChange}\n                    value={this.props.fish.name}\n                />\n                <input\n                    type=\"text\"\n                    name=\"price\"\n                    onChange={this.handleChange}\n                    value={this.props.fish.price}\n                />\n                <select\n                    type=\"text\"\n                    name=\"status\"\n                    onChange={this.handleChange}\n                    value={this.props.fish.status}\n                >\n                    <option value=\"available\">Fresh!</option>\n                    <option value=\"unavailable\">Sold Out!</option>\n                </select>\n                <textarea\n                    name=\"desc\"\n                    onChange={this.handleChange}\n                    value={this.props.fish.desc}\n                />\n                <input\n                    type=\"text\"\n                    name=\"image\"\n                    onChange={this.handleChange}\n                    value={this.props.fish.image}\n                />\n                <button onClick={() => this.props.deleteFish(this.props.index)}>\n                    Remove Fish\n                </button>\n            </div>\n        );\n    }\n}\n\nexport default EditFishForm;\n","import React from 'react';\nimport AddFishForm from './AddFishForm';\nimport EditFishForm from './EditFishForm';\n\nclass Inventory extends React.Component {\n    render() {\n        return (\n            <div className=\"inventory\">\n                <h2>Inventory</h2>\n                {Object.keys(this.props.fishes).map((key) => (\n                    <EditFishForm\n                        key={key}\n                        index={key}\n                        fish={this.props.fishes[key]}\n                        updateFish={this.props.updateFish}\n                        deleteFish={this.props.deleteFish}\n                    />\n                ))}\n                <AddFishForm addFish={this.props.addFish} />\n                <button onClick={this.props.loadSampleFishes}>\n                    Load Sample Fishes\n                </button>\n            </div>\n        );\n    }\n}\n\nexport default Inventory;\n","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n    fish1: {\n        name: 'Pacific Halibut',\n        image: '/images/hali.jpg',\n        desc:\n            'Everyone’s favorite white fish. We will cut it to the size you need and ship it.',\n        price: 1724,\n        status: 'available'\n    },\n\n    fish2: {\n        name: 'Lobster',\n        image: '/images/lobster.jpg',\n        desc:\n            'These tender, mouth-watering beauties are a fantastic hit at any dinner party.',\n        price: 3200,\n        status: 'available'\n    },\n\n    fish3: {\n        name: 'Sea Scallops',\n        image: '/images/scallops.jpg',\n        desc:\n            'Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound',\n        price: 1684,\n        status: 'unavailable'\n    },\n\n    fish4: {\n        name: 'Mahi Mahi',\n        image: '/images/mahi.jpg',\n        desc:\n            'Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. ',\n        price: 1129,\n        status: 'available'\n    },\n\n    fish5: {\n        name: 'King Crab',\n        image: '/images/crab.jpg',\n        desc:\n            'Crack these open and enjoy them plain or with one of our cocktail sauces',\n        price: 4234,\n        status: 'available'\n    },\n\n    fish6: {\n        name: 'Atlantic Salmon',\n        image: '/images/salmon.jpg',\n        desc:\n            'This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!',\n        price: 1453,\n        status: 'available'\n    },\n\n    fish7: {\n        name: 'Oysters',\n        image: '/images/oysters.jpg',\n        desc:\n            'A soft plump oyster with a sweet salty flavor and a clean finish.',\n        price: 2543,\n        status: 'available'\n    },\n\n    fish8: {\n        name: 'Mussels',\n        image: '/images/mussels.jpg',\n        desc:\n            'The best mussels from the Pacific Northwest with a full-flavored and complex taste.',\n        price: 425,\n        status: 'available'\n    },\n\n    fish9: {\n        name: 'Jumbo Prawns',\n        image: '/images/prawns.jpg',\n        desc:\n            'With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.',\n        price: 2250,\n        status: 'available'\n    }\n};\n\nexport default fishes;\n","import React from 'react';\nimport { formatPrice } from '../helpers';\n\nclass Fish extends React.Component {\n    render() {\n        const { image, name, price, desc, status } = this.props.details;\n        const isAvailable = status === 'available';\n        return (\n            <li className=\"menu-fish\">\n                <img src={image} alt={name} />\n                <h3 className=\"fish-name\">\n                    {name}\n                    <span className=\"price\">{formatPrice(price)}</span>\n                </h3>\n                <p>{desc}</p>\n                <button\n                    disabled={!isAvailable}\n                    onClick={() => this.props.addToOrder(this.props.index)}\n                >\n                    {isAvailable ? 'Add To Order' : 'Sold Out!'}\n                </button>\n            </li>\n        );\n    }\n}\n\nexport default Fish;\n","import Rebase from 're-base';\nimport firebase from 'firebase';\n\nimport { apiKey, authDomain, databaseURL } from './env.js';\n\nconst firebaseApp = firebase.initializeApp({\n    apiKey: apiKey,\n    authDomain: authDomain,\n    databaseURL: databaseURL\n});\n\nconst base = Rebase.createClass(firebaseApp.database());\n\nexport { firebaseApp };\n\nexport default base;\n","export const apiKey = 'AIzaSyC0WU6udB-jZ25AXqtkHSHXFZdpQQpAQ_c';\r\nexport const authDomain = 'food-order-89099.firebaseapp.com';\r\nexport const databaseURL =\r\n    'https://food-order-89099-default-rtdb.firebaseio.com';\r\n","import React from 'react';\nimport Header from './Header';\nimport Order from './Order';\nimport Inventory from './Inventory';\nimport sampleFishes from '../sample-fishes';\nimport Fish from './Fish';\nimport base from '../base';\n\nclass App extends React.Component {\n    state = {\n        fishes: {},\n        order: {}\n    };\n\n    componentDidMount() {\n        // first reinstate our localStorage\n        const localStorageRef = localStorage.getItem('data');\n        if (localStorageRef) {\n            this.setState({ order: JSON.parse(localStorageRef) });\n        } else {\n            this.loadSampleFishes();\n        }\n\n        this.ref = base.syncState(`fishes`, {\n            context: this,\n            state: 'fishes'\n        });\n    }\n\n    componentDidUpdate() {\n        console.log(this.state.order);\n        localStorage.setItem('data', JSON.stringify(this.state.order));\n    }\n\n    componentWillUnmount() {\n        base.removeBinding(this.ref);\n    }\n\n    addFish = (fish) => {\n        // 1. Take a copy of the existing state\n        const fishes = { ...this.state.fishes };\n        // 2. Add our new fish to that fishes variable\n        fishes[`fish${Date.now()}`] = fish;\n        // 3. Set the new fishes object to state\n        this.setState({ fishes });\n    };\n\n    updateFish = (key, updatedFish) => {\n        // 1. Take a copy of the current state\n        const fishes = { ...this.state.fishes };\n        // 2. Update that state\n        fishes[key] = updatedFish;\n        // 3. Set that to state\n        this.setState({ fishes });\n    };\n\n    deleteFish = (key) => {\n        // 1. take a copy of state\n        const fishes = { ...this.state.fishes };\n        // 2. update the state\n        fishes[key] = null;\n        // 3.  update state\n        this.setState({ fishes });\n    };\n\n    loadSampleFishes = () => {\n        this.setState({ fishes: sampleFishes });\n    };\n\n    addToOrder = (key) => {\n        // 1. take a copy of state\n        const order = { ...this.state.order };\n        // 2. Either add to the order, or update the number in our order\n        order[key] = order[key] + 1 || 1;\n        // 3. Call setState to update our state object\n        this.setState({ order });\n    };\n\n    removeFromOrder = (key) => {\n        // 1. take a copy of state\n        const order = { ...this.state.order };\n        // 2. remove that itemf from order\n        delete order[key];\n        // 3. Call setState to update our state object\n        this.setState({ order });\n    };\n\n    render() {\n        return (\n            <div className=\"catch-of-the-day\">\n                <div className=\"menu\">\n                    <Header tagline=\"Fresh Seafood Market\" />\n                    <ul className=\"fishes\">\n                        {Object.keys(this.state.fishes).map((key) => (\n                            <Fish\n                                key={key}\n                                index={key}\n                                details={this.state.fishes[key]}\n                                addToOrder={this.addToOrder}\n                            />\n                        ))}\n                    </ul>\n                </div>\n\n                <Order\n                    fishes={this.state.fishes}\n                    order={this.state.order}\n                    removeFromOrder={this.removeFromOrder}\n                />\n\n                <Inventory\n                    addFish={this.addFish}\n                    updateFish={this.updateFish}\n                    deleteFish={this.deleteFish}\n                    loadSampleFishes={this.loadSampleFishes}\n                    fishes={this.state.fishes}\n                />\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\n\nconst NotFound = () => (\n    <div>\n        <h2>Page not found</h2>\n    </div>\n);\n\nexport default NotFound;\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport App from './App';\nimport NotFound from './NotFound';\n\nconst Router = () => (\n    <BrowserRouter>\n        <Switch>\n            <Route path=\"/\" component={App} />\n            <Route component={NotFound} />\n        </Switch>\n    </BrowserRouter>\n);\n\nexport default Router;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport Router from './components/Router';\nimport './css/style.css';\n\nrender(<Router />, document.querySelector('#main'));\n"],"sourceRoot":""}